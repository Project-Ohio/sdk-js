/*
 * MyOhioAssembly.com Public API
 * REST API for MyOhioAssembly.com
 *
 * OpenAPI spec version: 0.1.0
 * Contact: contact@myohioassembly.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MyOhioAssemblycomPublicApi);
  }
}(this, function(expect, MyOhioAssemblycomPublicApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MyOhioAssemblycomPublicApi.ShopApi();
  });

  describe('(package)', function() {
    describe('ShopApi', function() {
      describe('memberOrderDeleteOne', function() {
        it('should call memberOrderDeleteOne successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrderDeleteOne call and complete the assertions
          /*

          instance.memberOrderDeleteOne(memberId, orderId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse20019);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberOrderItemsQuantityUpdateOne', function() {
        it('should call memberOrderItemsQuantityUpdateOne successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrderItemsQuantityUpdateOne call and complete the assertions
          /*

          instance.memberOrderItemsQuantityUpdateOne(memberId, orderId, itemId, quantity, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberOrderItemsUpdateOne', function() {
        it('should call memberOrderItemsUpdateOne successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrderItemsUpdateOne call and complete the assertions
          /*
          var opts = {};

          instance.memberOrderItemsUpdateOne(memberId, orderId, itemId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberOrderPaymentList', function() {
        it('should call memberOrderPaymentList successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrderPaymentList call and complete the assertions
          /*
          var opts = {};

          instance.memberOrderPaymentList(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse20020);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberOrderPaymentsCreate', function() {
        it('should call memberOrderPaymentsCreate successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrderPaymentsCreate call and complete the assertions
          /*
          var opts = {};

          instance.memberOrderPaymentsCreate(memberId, orderId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberOrderPaymentsDeleteOne', function() {
        it('should call memberOrderPaymentsDeleteOne successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrderPaymentsDeleteOne call and complete the assertions
          /*

          instance.memberOrderPaymentsDeleteOne(memberId, orderId, paymentId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse20021);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberOrderPaymentsUpdateOneCancel', function() {
        it('should call memberOrderPaymentsUpdateOneCancel successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrderPaymentsUpdateOneCancel call and complete the assertions
          /*

          instance.memberOrderPaymentsUpdateOneCancel(memberId, orderId, paymentId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberOrderPaymentsUpdateOneComplete', function() {
        it('should call memberOrderPaymentsUpdateOneComplete successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrderPaymentsUpdateOneComplete call and complete the assertions
          /*

          instance.memberOrderPaymentsUpdateOneComplete(memberId, orderId, paymentId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberOrderPaymentsUpdateOneRefund', function() {
        it('should call memberOrderPaymentsUpdateOneRefund successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrderPaymentsUpdateOneRefund call and complete the assertions
          /*

          instance.memberOrderPaymentsUpdateOneRefund(memberId, orderId, paymentId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberOrdersCreate', function() {
        it('should call memberOrdersCreate successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrdersCreate call and complete the assertions
          /*

          instance.memberOrdersCreate(memberId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberOrdersList', function() {
        it('should call memberOrdersList successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrdersList call and complete the assertions
          /*
          var opts = {};

          instance.memberOrdersList(memberId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse20018);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberOrdersUpdateOne', function() {
        it('should call memberOrdersUpdateOne successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrdersUpdateOne call and complete the assertions
          /*
          var opts = {};

          instance.memberOrdersUpdateOne(memberId, orderId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberOrdersUpdateOneCancel', function() {
        it('should call memberOrdersUpdateOneCancel successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrdersUpdateOneCancel call and complete the assertions
          /*

          instance.memberOrdersUpdateOneCancel(memberId, orderId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberOrdersUpdateOneConfirm', function() {
        it('should call memberOrdersUpdateOneConfirm successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrdersUpdateOneConfirm call and complete the assertions
          /*

          instance.memberOrdersUpdateOneConfirm(memberId, orderId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberOrdersUpdateOneSubmit', function() {
        it('should call memberOrdersUpdateOneSubmit successfully', function(done) {
          // TODO: uncomment, update parameter values for memberOrdersUpdateOneSubmit call and complete the assertions
          /*

          instance.memberOrdersUpdateOneSubmit(memberId, orderId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse2013);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberPurchaseItemsFulfillmentStatusUpdateOne', function() {
        it('should call memberPurchaseItemsFulfillmentStatusUpdateOne successfully', function(done) {
          // TODO: uncomment, update parameter values for memberPurchaseItemsFulfillmentStatusUpdateOne call and complete the assertions
          /*
          var opts = {};

          instance.memberPurchaseItemsFulfillmentStatusUpdateOne(memberId, purchaseItemId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse20023);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberPurchaseItemsList', function() {
        it('should call memberPurchaseItemsList successfully', function(done) {
          // TODO: uncomment, update parameter values for memberPurchaseItemsList call and complete the assertions
          /*
          var opts = {};

          instance.memberPurchaseItemsList(memberId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse20022);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('memberPurchaseItemsUpdateOne', function() {
        it('should call memberPurchaseItemsUpdateOne successfully', function(done) {
          // TODO: uncomment, update parameter values for memberPurchaseItemsUpdateOne call and complete the assertions
          /*
          var opts = {};

          instance.memberPurchaseItemsUpdateOne(memberId, purchaseItemId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse20023);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('shopItemsCreate', function() {
        it('should call shopItemsCreate successfully', function(done) {
          // TODO: uncomment, update parameter values for shopItemsCreate call and complete the assertions
          /*
          var opts = {};

          instance.shopItemsCreate(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse2012);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('shopItemsDeleteOne', function() {
        it('should call shopItemsDeleteOne successfully', function(done) {
          // TODO: uncomment, update parameter values for shopItemsDeleteOne call and complete the assertions
          /*

          instance.shopItemsDeleteOne(itemId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse20017);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('shopItemsList', function() {
        it('should call shopItemsList successfully', function(done) {
          // TODO: uncomment, update parameter values for shopItemsList call and complete the assertions
          /*
          var opts = {};

          instance.shopItemsList(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse20016);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('shopItemsUpdateOne', function() {
        it('should call shopItemsUpdateOne successfully', function(done) {
          // TODO: uncomment, update parameter values for shopItemsUpdateOne call and complete the assertions
          /*
          var opts = {};

          instance.shopItemsUpdateOne(itemId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MyOhioAssemblycomPublicApi.InlineResponse2012);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
