/*
 * MyOhioAssembly.com Public API
 * REST API for MyOhioAssembly.com
 *
 * OpenAPI spec version: 0.1.0
 * Contact: contact@myohioassembly.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MyOhioAssemblycomPublicApi);
  }
}(this, function(expect, MyOhioAssemblycomPublicApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ResShopOrderPayment', function() {
      beforeEach(function() {
        instance = new MyOhioAssemblycomPublicApi.ResShopOrderPayment();
      });

      it('should create an instance of ResShopOrderPayment', function() {
        // TODO: update the code to test ResShopOrderPayment
        expect(instance).to.be.a(MyOhioAssemblycomPublicApi.ResShopOrderPayment);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property amount (base name: "amount")', function() {
        // TODO: update the code to test the property amount
        expect(instance).to.have.property('amount');
        // expect(instance.amount).to.be(expectedValueLiteral);
      });

      it('should have the property method (base name: "method")', function() {
        // TODO: update the code to test the property method
        expect(instance).to.have.property('method');
        // expect(instance.method).to.be(expectedValueLiteral);
      });

      it('should have the property methodCardLast4 (base name: "methodCardLast4")', function() {
        // TODO: update the code to test the property methodCardLast4
        expect(instance).to.have.property('methodCardLast4');
        // expect(instance.methodCardLast4).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property createdAt (base name: "createdAt")', function() {
        // TODO: update the code to test the property createdAt
        expect(instance).to.have.property('createdAt');
        // expect(instance.createdAt).to.be(expectedValueLiteral);
      });

      it('should have the property updatedAt (base name: "updatedAt")', function() {
        // TODO: update the code to test the property updatedAt
        expect(instance).to.have.property('updatedAt');
        // expect(instance.updatedAt).to.be(expectedValueLiteral);
      });

      it('should have the property refundedAt (base name: "refundedAt")', function() {
        // TODO: update the code to test the property refundedAt
        expect(instance).to.have.property('refundedAt');
        // expect(instance.refundedAt).to.be(expectedValueLiteral);
      });

      it('should have the property deletedAt (base name: "deletedAt")', function() {
        // TODO: update the code to test the property deletedAt
        expect(instance).to.have.property('deletedAt');
        // expect(instance.deletedAt).to.be(expectedValueLiteral);
      });

    });
  });

}));
