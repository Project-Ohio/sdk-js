/*
 * MyOhioAssembly.com Public API
 * REST API for MyOhioAssembly.com
 *
 * OpenAPI spec version: 0.1.0
 * Contact: contact@myohioassembly.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MyOhioAssemblycomPublicApi);
  }
}(this, function(expect, MyOhioAssemblycomPublicApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ResMember', function() {
      beforeEach(function() {
        instance = new MyOhioAssemblycomPublicApi.ResMember();
      });

      it('should create an instance of ResMember', function() {
        // TODO: update the code to test ResMember
        expect(instance).to.be.a(MyOhioAssemblycomPublicApi.ResMember);
      });

      it('should have the property credentialCardFee (base name: "credentialCardFee")', function() {
        // TODO: update the code to test the property credentialCardFee
        expect(instance).to.have.property('credentialCardFee');
        // expect(instance.credentialCardFee).to.be(expectedValueLiteral);
      });

      it('should have the property trainingCourseFee (base name: "trainingCourseFee")', function() {
        // TODO: update the code to test the property trainingCourseFee
        expect(instance).to.have.property('trainingCourseFee');
        // expect(instance.trainingCourseFee).to.be(expectedValueLiteral);
      });

      it('should have the property donationStateAssembly (base name: "donationStateAssembly")', function() {
        // TODO: update the code to test the property donationStateAssembly
        expect(instance).to.have.property('donationStateAssembly');
        // expect(instance.donationStateAssembly).to.be(expectedValueLiteral);
      });

      it('should have the property donationCountyAssembly (base name: "donationCountyAssembly")', function() {
        // TODO: update the code to test the property donationCountyAssembly
        expect(instance).to.have.property('donationCountyAssembly');
        // expect(instance.donationCountyAssembly).to.be(expectedValueLiteral);
      });

      it('should have the property donationStateChiefMarshal (base name: "donationStateChiefMarshal")', function() {
        // TODO: update the code to test the property donationStateChiefMarshal
        expect(instance).to.have.property('donationStateChiefMarshal');
        // expect(instance.donationStateChiefMarshal).to.be(expectedValueLiteral);
      });

      it('should have the property donationDesignatedRecipient (base name: "donationDesignatedRecipient")', function() {
        // TODO: update the code to test the property donationDesignatedRecipient
        expect(instance).to.have.property('donationDesignatedRecipient');
        // expect(instance.donationDesignatedRecipient).to.be(expectedValueLiteral);
      });

      it('should have the property donationDesignatedAmount (base name: "donationDesignatedAmount")', function() {
        // TODO: update the code to test the property donationDesignatedAmount
        expect(instance).to.have.property('donationDesignatedAmount');
        // expect(instance.donationDesignatedAmount).to.be(expectedValueLiteral);
      });

    });
  });

}));
