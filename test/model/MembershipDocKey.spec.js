/*
 * MyOhioAssembly.com Public API
 * REST API for MyOhioAssembly.com
 *
 * OpenAPI spec version: 0.1.0
 * Contact: contact@myohioassembly.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MyOhioAssemblycomPublicApi);
  }
}(this, function(expect, MyOhioAssemblycomPublicApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('MembershipDocKey', function() {
      beforeEach(function() {
        instance = MyOhioAssemblycomPublicApi.MembershipDocKey;
      });

      it('should create an instance of MembershipDocKey', function() {
        // TODO: update the code to test MembershipDocKey
        expect(instance).to.be.a('object');
      });

      it('should have the property declarationAmericans', function() {
        expect(instance).to.have.property('declarationAmericans');
        expect(instance.declarationAmericans).to.be("declarationAmericans");
      });

      it('should have the property declarationImmigrants', function() {
        expect(instance).to.have.property('declarationImmigrants');
        expect(instance.declarationImmigrants).to.be("declarationImmigrants");
      });

      it('should have the property declarationFederalPersons', function() {
        expect(instance).to.have.property('declarationFederalPersons');
        expect(instance.declarationFederalPersons).to.be("declarationFederalPersons");
      });

      it('should have the property declarationPoliticalStatus', function() {
        expect(instance).to.have.property('declarationPoliticalStatus');
        expect(instance.declarationPoliticalStatus).to.be("declarationPoliticalStatus");
      });

      it('should have the property birthRecord', function() {
        expect(instance).to.have.property('birthRecord');
        expect(instance.birthRecord).to.be("birthRecord");
      });

      it('should have the property witnessTestimony1', function() {
        expect(instance).to.have.property('witnessTestimony1');
        expect(instance.witnessTestimony1).to.be("witnessTestimony1");
      });

      it('should have the property witnessTestimony2', function() {
        expect(instance).to.have.property('witnessTestimony2');
        expect(instance.witnessTestimony2).to.be("witnessTestimony2");
      });

      it('should have the property voterCancellation', function() {
        expect(instance).to.have.property('voterCancellation');
        expect(instance.voterCancellation).to.be("voterCancellation");
      });

      it('should have the property revocationTaxes1', function() {
        expect(instance).to.have.property('revocationTaxes1');
        expect(instance.revocationTaxes1).to.be("revocationTaxes1");
      });

      it('should have the property revocationTaxes2', function() {
        expect(instance).to.have.property('revocationTaxes2');
        expect(instance.revocationTaxes2).to.be("revocationTaxes2");
      });

      it('should have the property deedReconveyance', function() {
        expect(instance).to.have.property('deedReconveyance');
        expect(instance.deedReconveyance).to.be("deedReconveyance");
      });

      it('should have the property certAssumedName', function() {
        expect(instance).to.have.property('certAssumedName');
        expect(instance.certAssumedName).to.be("certAssumedName");
      });

      it('should have the property actExpatriation1', function() {
        expect(instance).to.have.property('actExpatriation1');
        expect(instance.actExpatriation1).to.be("actExpatriation1");
      });

      it('should have the property actExpatriation2', function() {
        expect(instance).to.have.property('actExpatriation2');
        expect(instance.actExpatriation2).to.be("actExpatriation2");
      });

      it('should have the property actExpatriation3', function() {
        expect(instance).to.have.property('actExpatriation3');
        expect(instance.actExpatriation3).to.be("actExpatriation3");
      });

      it('should have the property cancellationPowerAttorney', function() {
        expect(instance).to.have.property('cancellationPowerAttorney');
        expect(instance.cancellationPowerAttorney).to.be("cancellationPowerAttorney");
      });

      it('should have the property foreignSovereignImmunitiesAct', function() {
        expect(instance).to.have.property('foreignSovereignImmunitiesAct');
        expect(instance.foreignSovereignImmunitiesAct).to.be("foreignSovereignImmunitiesAct");
      });

      it('should have the property dnaParamountClaim', function() {
        expect(instance).to.have.property('dnaParamountClaim');
        expect(instance.dnaParamountClaim).to.be("dnaParamountClaim");
      });

      it('should have the property militarySeverance', function() {
        expect(instance).to.have.property('militarySeverance');
        expect(instance.militarySeverance).to.be("militarySeverance");
      });

      it('should have the property commonCarryDeclaration', function() {
        expect(instance).to.have.property('commonCarryDeclaration');
        expect(instance.commonCarryDeclaration).to.be("commonCarryDeclaration");
      });

      it('should have the property feeSchedule', function() {
        expect(instance).to.have.property('feeSchedule');
        expect(instance.feeSchedule).to.be("feeSchedule");
      });

      it('should have the property lineageTreaty', function() {
        expect(instance).to.have.property('lineageTreaty');
        expect(instance.lineageTreaty).to.be("lineageTreaty");
      });

      it('should have the property marriageRecord', function() {
        expect(instance).to.have.property('marriageRecord');
        expect(instance.marriageRecord).to.be("marriageRecord");
      });

      it('should have the property babyDeed1', function() {
        expect(instance).to.have.property('babyDeed1');
        expect(instance.babyDeed1).to.be("babyDeed1");
      });

      it('should have the property babyDeed2', function() {
        expect(instance).to.have.property('babyDeed2');
        expect(instance.babyDeed2).to.be("babyDeed2");
      });

      it('should have the property babyDeed3', function() {
        expect(instance).to.have.property('babyDeed3');
        expect(instance.babyDeed3).to.be("babyDeed3");
      });

      it('should have the property babyDeed4', function() {
        expect(instance).to.have.property('babyDeed4');
        expect(instance.babyDeed4).to.be("babyDeed4");
      });

      it('should have the property babyDeed5', function() {
        expect(instance).to.have.property('babyDeed5');
        expect(instance.babyDeed5).to.be("babyDeed5");
      });

      it('should have the property babyDeed6', function() {
        expect(instance).to.have.property('babyDeed6');
        expect(instance.babyDeed6).to.be("babyDeed6");
      });

      it('should have the property babyDeed7', function() {
        expect(instance).to.have.property('babyDeed7');
        expect(instance.babyDeed7).to.be("babyDeed7");
      });

      it('should have the property babyDeed8', function() {
        expect(instance).to.have.property('babyDeed8');
        expect(instance.babyDeed8).to.be("babyDeed8");
      });

      it('should have the property babyDeed9', function() {
        expect(instance).to.have.property('babyDeed9');
        expect(instance.babyDeed9).to.be("babyDeed9");
      });

      it('should have the property deathRecord', function() {
        expect(instance).to.have.property('deathRecord');
        expect(instance.deathRecord).to.be("deathRecord");
      });

      it('should have the property privateBusinessDocs', function() {
        expect(instance).to.have.property('privateBusinessDocs');
        expect(instance.privateBusinessDocs).to.be("privateBusinessDocs");
      });

      it('should have the property otherDocs', function() {
        expect(instance).to.have.property('otherDocs');
        expect(instance.otherDocs).to.be("otherDocs");
      });

      it('should have the property miscNoticesDocs', function() {
        expect(instance).to.have.property('miscNoticesDocs');
        expect(instance.miscNoticesDocs).to.be("miscNoticesDocs");
      });

      it('should have the property landPatent1', function() {
        expect(instance).to.have.property('landPatent1');
        expect(instance.landPatent1).to.be("landPatent1");
      });

      it('should have the property landPatent2', function() {
        expect(instance).to.have.property('landPatent2');
        expect(instance.landPatent2).to.be("landPatent2");
      });

      it('should have the property landPatent3', function() {
        expect(instance).to.have.property('landPatent3');
        expect(instance.landPatent3).to.be("landPatent3");
      });

      it('should have the property landPatent4', function() {
        expect(instance).to.have.property('landPatent4');
        expect(instance.landPatent4).to.be("landPatent4");
      });

      it('should have the property landPatent5', function() {
        expect(instance).to.have.property('landPatent5');
        expect(instance.landPatent5).to.be("landPatent5");
      });

      it('should have the property territorialGovtDocs', function() {
        expect(instance).to.have.property('territorialGovtDocs');
        expect(instance.territorialGovtDocs).to.be("territorialGovtDocs");
      });

      it('should have the property municipalGovtDocs', function() {
        expect(instance).to.have.property('municipalGovtDocs');
        expect(instance.municipalGovtDocs).to.be("municipalGovtDocs");
      });

      it('should have the property commercialEntityDocs', function() {
        expect(instance).to.have.property('commercialEntityDocs');
        expect(instance.commercialEntityDocs).to.be("commercialEntityDocs");
      });

      it('should have the property commonLawWill', function() {
        expect(instance).to.have.property('commonLawWill');
        expect(instance.commonLawWill).to.be("commonLawWill");
      });

    });
  });

}));
