/*
 * MyOhioAssembly.com Public API
 * REST API for MyOhioAssembly.com
 *
 * OpenAPI spec version: 0.1.0
 * Contact: contact@myohioassembly.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MyOhioAssemblycomPublicApi);
  }
}(this, function(expect, MyOhioAssemblycomPublicApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ResCredentialCard', function() {
      beforeEach(function() {
        instance = new MyOhioAssemblycomPublicApi.ResCredentialCard();
      });

      it('should create an instance of ResCredentialCard', function() {
        // TODO: update the code to test ResCredentialCard
        expect(instance).to.be.a(MyOhioAssemblycomPublicApi.ResCredentialCard);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property purchaseItemId (base name: "purchaseItemId")', function() {
        // TODO: update the code to test the property purchaseItemId
        expect(instance).to.have.property('purchaseItemId');
        // expect(instance.purchaseItemId).to.be(expectedValueLiteral);
      });

      it('should have the property recordingNumber (base name: "recordingNumber")', function() {
        // TODO: update the code to test the property recordingNumber
        expect(instance).to.have.property('recordingNumber');
        // expect(instance.recordingNumber).to.be(expectedValueLiteral);
      });

      it('should have the property masterRecordNumber (base name: "masterRecordNumber")', function() {
        // TODO: update the code to test the property masterRecordNumber
        expect(instance).to.have.property('masterRecordNumber');
        // expect(instance.masterRecordNumber).to.be(expectedValueLiteral);
      });

      it('should have the property printedAt (base name: "printedAt")', function() {
        // TODO: update the code to test the property printedAt
        expect(instance).to.have.property('printedAt');
        // expect(instance.printedAt).to.be(expectedValueLiteral);
      });

      it('should have the property verifiedAt (base name: "verifiedAt")', function() {
        // TODO: update the code to test the property verifiedAt
        expect(instance).to.have.property('verifiedAt');
        // expect(instance.verifiedAt).to.be(expectedValueLiteral);
      });

      it('should have the property expirationDate (base name: "expirationDate")', function() {
        // TODO: update the code to test the property expirationDate
        expect(instance).to.have.property('expirationDate');
        // expect(instance.expirationDate).to.be(expectedValueLiteral);
      });

      it('should have the property createdAt (base name: "createdAt")', function() {
        // TODO: update the code to test the property createdAt
        expect(instance).to.have.property('createdAt');
        // expect(instance.createdAt).to.be(expectedValueLiteral);
      });

      it('should have the property updatedAt (base name: "updatedAt")', function() {
        // TODO: update the code to test the property updatedAt
        expect(instance).to.have.property('updatedAt');
        // expect(instance.updatedAt).to.be(expectedValueLiteral);
      });

      it('should have the property member (base name: "member")', function() {
        // TODO: update the code to test the property member
        expect(instance).to.have.property('member');
        // expect(instance.member).to.be(expectedValueLiteral);
      });

    });
  });

}));
