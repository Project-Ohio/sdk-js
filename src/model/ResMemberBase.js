/**
 * MyOhioAssembly.com Public API
 * REST API for MyOhioAssembly.com
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: contact@myohioassembly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DirectoryListing from './DirectoryListing';
import MemberRole from './MemberRole';
import ResMemberBaseNationality from './ResMemberBaseNationality';
import ResMemberProfile from './ResMemberProfile';

/**
 * The ResMemberBase model module.
 * @module model/ResMemberBase
 * @version 0.1.0
 */
class ResMemberBase {
    /**
     * Constructs a new <code>ResMemberBase</code>.
     * @alias module:model/ResMemberBase
     */
    constructor() { 
        
        ResMemberBase.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResMemberBase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResMemberBase} obj Optional instance to populate.
     * @return {module:model/ResMemberBase} The populated <code>ResMemberBase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResMemberBase();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = MemberRole.constructFromObject(data['role']);
            }
            if (data.hasOwnProperty('coordinator')) {
                obj['coordinator'] = DirectoryListing.constructFromObject(data['coordinator']);
            }
            if (data.hasOwnProperty('recordingSecretary')) {
                obj['recordingSecretary'] = DirectoryListing.constructFromObject(data['recordingSecretary']);
            }
            if (data.hasOwnProperty('nationality')) {
                obj['nationality'] = ResMemberBaseNationality.constructFromObject(data['nationality']);
            }
            if (data.hasOwnProperty('profile')) {
                obj['profile'] = ResMemberProfile.constructFromObject(data['profile']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResMemberBase</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResMemberBase</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // validate the optional field `coordinator`
        if (data['coordinator']) { // data not null
          DirectoryListing.validateJSON(data['coordinator']);
        }
        // validate the optional field `recordingSecretary`
        if (data['recordingSecretary']) { // data not null
          DirectoryListing.validateJSON(data['recordingSecretary']);
        }
        // validate the optional field `nationality`
        if (data['nationality']) { // data not null
          ResMemberBaseNationality.validateJSON(data['nationality']);
        }
        // validate the optional field `profile`
        if (data['profile']) { // data not null
          ResMemberProfile.validateJSON(data['profile']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
ResMemberBase.prototype['id'] = undefined;

/**
 * @member {String} email
 */
ResMemberBase.prototype['email'] = undefined;

/**
 * @member {module:model/MemberRole} role
 */
ResMemberBase.prototype['role'] = undefined;

/**
 * @member {module:model/DirectoryListing} coordinator
 */
ResMemberBase.prototype['coordinator'] = undefined;

/**
 * @member {module:model/DirectoryListing} recordingSecretary
 */
ResMemberBase.prototype['recordingSecretary'] = undefined;

/**
 * @member {module:model/ResMemberBaseNationality} nationality
 */
ResMemberBase.prototype['nationality'] = undefined;

/**
 * @member {module:model/ResMemberProfile} profile
 */
ResMemberBase.prototype['profile'] = undefined;






export default ResMemberBase;

