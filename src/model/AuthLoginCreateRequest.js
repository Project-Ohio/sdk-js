/**
 * MyOhioAssembly.com Public API
 * REST API for MyOhioAssembly.com
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: contact@myohioassembly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthLoginCreateRequest model module.
 * @module model/AuthLoginCreateRequest
 * @version 0.1.0
 */
class AuthLoginCreateRequest {
    /**
     * Constructs a new <code>AuthLoginCreateRequest</code>.
     * @alias module:model/AuthLoginCreateRequest
     * @param captchaResToken {String} 
     */
    constructor(captchaResToken) { 
        
        AuthLoginCreateRequest.initialize(this, captchaResToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, captchaResToken) { 
        obj['captchaResToken'] = captchaResToken;
    }

    /**
     * Constructs a <code>AuthLoginCreateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthLoginCreateRequest} obj Optional instance to populate.
     * @return {module:model/AuthLoginCreateRequest} The populated <code>AuthLoginCreateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthLoginCreateRequest();

            if (data.hasOwnProperty('captchaResToken')) {
                obj['captchaResToken'] = ApiClient.convertToType(data['captchaResToken'], 'String');
            }
            if (data.hasOwnProperty('elevatedPass')) {
                obj['elevatedPass'] = ApiClient.convertToType(data['elevatedPass'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthLoginCreateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthLoginCreateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AuthLoginCreateRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['captchaResToken'] && !(typeof data['captchaResToken'] === 'string' || data['captchaResToken'] instanceof String)) {
            throw new Error("Expected the field `captchaResToken` to be a primitive type in the JSON string but got " + data['captchaResToken']);
        }
        // ensure the json data is a string
        if (data['elevatedPass'] && !(typeof data['elevatedPass'] === 'string' || data['elevatedPass'] instanceof String)) {
            throw new Error("Expected the field `elevatedPass` to be a primitive type in the JSON string but got " + data['elevatedPass']);
        }

        return true;
    }


}

AuthLoginCreateRequest.RequiredProperties = ["captchaResToken"];

/**
 * @member {String} captchaResToken
 */
AuthLoginCreateRequest.prototype['captchaResToken'] = undefined;

/**
 * @member {String} elevatedPass
 */
AuthLoginCreateRequest.prototype['elevatedPass'] = undefined;






export default AuthLoginCreateRequest;

