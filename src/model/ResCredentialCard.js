/**
 * MyOhioAssembly.com Public API
 * REST API for MyOhioAssembly.com
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: contact@myohioassembly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResMemberBase from './ResMemberBase';

/**
 * The ResCredentialCard model module.
 * @module model/ResCredentialCard
 * @version 0.1.0
 */
class ResCredentialCard {
    /**
     * Constructs a new <code>ResCredentialCard</code>.
     * @alias module:model/ResCredentialCard
     */
    constructor() { 
        
        ResCredentialCard.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResCredentialCard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResCredentialCard} obj Optional instance to populate.
     * @return {module:model/ResCredentialCard} The populated <code>ResCredentialCard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResCredentialCard();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('purchaseItemId')) {
                obj['purchaseItemId'] = ApiClient.convertToType(data['purchaseItemId'], 'String');
            }
            if (data.hasOwnProperty('recordingNumber')) {
                obj['recordingNumber'] = ApiClient.convertToType(data['recordingNumber'], 'String');
            }
            if (data.hasOwnProperty('masterRecordNumber')) {
                obj['masterRecordNumber'] = ApiClient.convertToType(data['masterRecordNumber'], 'String');
            }
            if (data.hasOwnProperty('printedAt')) {
                obj['printedAt'] = ApiClient.convertToType(data['printedAt'], 'Date');
            }
            if (data.hasOwnProperty('verifiedAt')) {
                obj['verifiedAt'] = ApiClient.convertToType(data['verifiedAt'], 'Date');
            }
            if (data.hasOwnProperty('expirationDate')) {
                obj['expirationDate'] = ApiClient.convertToType(data['expirationDate'], 'Date');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
            if (data.hasOwnProperty('member')) {
                obj['member'] = ResMemberBase.constructFromObject(data['member']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResCredentialCard</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResCredentialCard</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['purchaseItemId'] && !(typeof data['purchaseItemId'] === 'string' || data['purchaseItemId'] instanceof String)) {
            throw new Error("Expected the field `purchaseItemId` to be a primitive type in the JSON string but got " + data['purchaseItemId']);
        }
        // ensure the json data is a string
        if (data['recordingNumber'] && !(typeof data['recordingNumber'] === 'string' || data['recordingNumber'] instanceof String)) {
            throw new Error("Expected the field `recordingNumber` to be a primitive type in the JSON string but got " + data['recordingNumber']);
        }
        // ensure the json data is a string
        if (data['masterRecordNumber'] && !(typeof data['masterRecordNumber'] === 'string' || data['masterRecordNumber'] instanceof String)) {
            throw new Error("Expected the field `masterRecordNumber` to be a primitive type in the JSON string but got " + data['masterRecordNumber']);
        }
        // validate the optional field `member`
        if (data['member']) { // data not null
          ResMemberBase.validateJSON(data['member']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
ResCredentialCard.prototype['id'] = undefined;

/**
 * @member {String} purchaseItemId
 */
ResCredentialCard.prototype['purchaseItemId'] = undefined;

/**
 * @member {String} recordingNumber
 */
ResCredentialCard.prototype['recordingNumber'] = undefined;

/**
 * @member {String} masterRecordNumber
 */
ResCredentialCard.prototype['masterRecordNumber'] = undefined;

/**
 * @member {Date} printedAt
 */
ResCredentialCard.prototype['printedAt'] = undefined;

/**
 * @member {Date} verifiedAt
 */
ResCredentialCard.prototype['verifiedAt'] = undefined;

/**
 * @member {Date} expirationDate
 */
ResCredentialCard.prototype['expirationDate'] = undefined;

/**
 * @member {Date} createdAt
 */
ResCredentialCard.prototype['createdAt'] = undefined;

/**
 * @member {Date} updatedAt
 */
ResCredentialCard.prototype['updatedAt'] = undefined;

/**
 * @member {module:model/ResMemberBase} member
 */
ResCredentialCard.prototype['member'] = undefined;






export default ResCredentialCard;

