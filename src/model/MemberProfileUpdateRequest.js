/**
 * MyOhioAssembly.com Public API
 * REST API for MyOhioAssembly.com
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: contact@myohioassembly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MemberGender from './MemberGender';
import MemberInterestsCommittee from './MemberInterestsCommittee';
import MemberInterestsIndividual from './MemberInterestsIndividual';
import MemberProfileCounty from './MemberProfileCounty';

/**
 * The MemberProfileUpdateRequest model module.
 * @module model/MemberProfileUpdateRequest
 * @version 0.1.0
 */
class MemberProfileUpdateRequest {
    /**
     * Constructs a new <code>MemberProfileUpdateRequest</code>.
     * @alias module:model/MemberProfileUpdateRequest
     */
    constructor() { 
        
        MemberProfileUpdateRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MemberProfileUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemberProfileUpdateRequest} obj Optional instance to populate.
     * @return {module:model/MemberProfileUpdateRequest} The populated <code>MemberProfileUpdateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemberProfileUpdateRequest();

            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('middleName')) {
                obj['middleName'] = ApiClient.convertToType(data['middleName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('gender')) {
                obj['gender'] = MemberGender.constructFromObject(data['gender']);
            }
            if (data.hasOwnProperty('dob')) {
                obj['dob'] = ApiClient.convertToType(data['dob'], 'Date');
            }
            if (data.hasOwnProperty('deceasedDate')) {
                obj['deceasedDate'] = ApiClient.convertToType(data['deceasedDate'], 'Date');
            }
            if (data.hasOwnProperty('addrLine1')) {
                obj['addrLine1'] = ApiClient.convertToType(data['addrLine1'], 'String');
            }
            if (data.hasOwnProperty('addrLine2')) {
                obj['addrLine2'] = ApiClient.convertToType(data['addrLine2'], 'String');
            }
            if (data.hasOwnProperty('addrCity')) {
                obj['addrCity'] = ApiClient.convertToType(data['addrCity'], 'String');
            }
            if (data.hasOwnProperty('addrState')) {
                obj['addrState'] = ApiClient.convertToType(data['addrState'], 'String');
            }
            if (data.hasOwnProperty('addrZip')) {
                obj['addrZip'] = ApiClient.convertToType(data['addrZip'], 'String');
            }
            if (data.hasOwnProperty('addrCounty')) {
                obj['addrCounty'] = MemberProfileCounty.constructFromObject(data['addrCounty']);
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('emailAlt')) {
                obj['emailAlt'] = ApiClient.convertToType(data['emailAlt'], 'String');
            }
            if (data.hasOwnProperty('isListedDirectory')) {
                obj['isListedDirectory'] = ApiClient.convertToType(data['isListedDirectory'], 'Boolean');
            }
            if (data.hasOwnProperty('isDesignationAmish')) {
                obj['isDesignationAmish'] = ApiClient.convertToType(data['isDesignationAmish'], 'Boolean');
            }
            if (data.hasOwnProperty('proLicense')) {
                obj['proLicense'] = ApiClient.convertToType(data['proLicense'], 'String');
            }
            if (data.hasOwnProperty('companyName')) {
                obj['companyName'] = ApiClient.convertToType(data['companyName'], 'String');
            }
            if (data.hasOwnProperty('interestsCommittee')) {
                obj['interestsCommittee'] = ApiClient.convertToType(data['interestsCommittee'], [MemberInterestsCommittee]);
            }
            if (data.hasOwnProperty('interestsIndividual')) {
                obj['interestsIndividual'] = ApiClient.convertToType(data['interestsIndividual'], [MemberInterestsIndividual]);
            }
            if (data.hasOwnProperty('interestsIndividualOther')) {
                obj['interestsIndividualOther'] = ApiClient.convertToType(data['interestsIndividualOther'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MemberProfileUpdateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MemberProfileUpdateRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['firstName'] && !(typeof data['firstName'] === 'string' || data['firstName'] instanceof String)) {
            throw new Error("Expected the field `firstName` to be a primitive type in the JSON string but got " + data['firstName']);
        }
        // ensure the json data is a string
        if (data['middleName'] && !(typeof data['middleName'] === 'string' || data['middleName'] instanceof String)) {
            throw new Error("Expected the field `middleName` to be a primitive type in the JSON string but got " + data['middleName']);
        }
        // ensure the json data is a string
        if (data['lastName'] && !(typeof data['lastName'] === 'string' || data['lastName'] instanceof String)) {
            throw new Error("Expected the field `lastName` to be a primitive type in the JSON string but got " + data['lastName']);
        }
        // ensure the json data is a string
        if (data['addrLine1'] && !(typeof data['addrLine1'] === 'string' || data['addrLine1'] instanceof String)) {
            throw new Error("Expected the field `addrLine1` to be a primitive type in the JSON string but got " + data['addrLine1']);
        }
        // ensure the json data is a string
        if (data['addrLine2'] && !(typeof data['addrLine2'] === 'string' || data['addrLine2'] instanceof String)) {
            throw new Error("Expected the field `addrLine2` to be a primitive type in the JSON string but got " + data['addrLine2']);
        }
        // ensure the json data is a string
        if (data['addrCity'] && !(typeof data['addrCity'] === 'string' || data['addrCity'] instanceof String)) {
            throw new Error("Expected the field `addrCity` to be a primitive type in the JSON string but got " + data['addrCity']);
        }
        // ensure the json data is a string
        if (data['addrState'] && !(typeof data['addrState'] === 'string' || data['addrState'] instanceof String)) {
            throw new Error("Expected the field `addrState` to be a primitive type in the JSON string but got " + data['addrState']);
        }
        // ensure the json data is a string
        if (data['addrZip'] && !(typeof data['addrZip'] === 'string' || data['addrZip'] instanceof String)) {
            throw new Error("Expected the field `addrZip` to be a primitive type in the JSON string but got " + data['addrZip']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is a string
        if (data['emailAlt'] && !(typeof data['emailAlt'] === 'string' || data['emailAlt'] instanceof String)) {
            throw new Error("Expected the field `emailAlt` to be a primitive type in the JSON string but got " + data['emailAlt']);
        }
        // ensure the json data is a string
        if (data['proLicense'] && !(typeof data['proLicense'] === 'string' || data['proLicense'] instanceof String)) {
            throw new Error("Expected the field `proLicense` to be a primitive type in the JSON string but got " + data['proLicense']);
        }
        // ensure the json data is a string
        if (data['companyName'] && !(typeof data['companyName'] === 'string' || data['companyName'] instanceof String)) {
            throw new Error("Expected the field `companyName` to be a primitive type in the JSON string but got " + data['companyName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['interestsCommittee'])) {
            throw new Error("Expected the field `interestsCommittee` to be an array in the JSON data but got " + data['interestsCommittee']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['interestsIndividual'])) {
            throw new Error("Expected the field `interestsIndividual` to be an array in the JSON data but got " + data['interestsIndividual']);
        }
        // ensure the json data is a string
        if (data['interestsIndividualOther'] && !(typeof data['interestsIndividualOther'] === 'string' || data['interestsIndividualOther'] instanceof String)) {
            throw new Error("Expected the field `interestsIndividualOther` to be a primitive type in the JSON string but got " + data['interestsIndividualOther']);
        }

        return true;
    }


}



/**
 * @member {String} firstName
 */
MemberProfileUpdateRequest.prototype['firstName'] = undefined;

/**
 * @member {String} middleName
 */
MemberProfileUpdateRequest.prototype['middleName'] = undefined;

/**
 * @member {String} lastName
 */
MemberProfileUpdateRequest.prototype['lastName'] = undefined;

/**
 * @member {module:model/MemberGender} gender
 */
MemberProfileUpdateRequest.prototype['gender'] = undefined;

/**
 * @member {Date} dob
 */
MemberProfileUpdateRequest.prototype['dob'] = undefined;

/**
 * @member {Date} deceasedDate
 */
MemberProfileUpdateRequest.prototype['deceasedDate'] = undefined;

/**
 * @member {String} addrLine1
 */
MemberProfileUpdateRequest.prototype['addrLine1'] = undefined;

/**
 * @member {String} addrLine2
 */
MemberProfileUpdateRequest.prototype['addrLine2'] = undefined;

/**
 * @member {String} addrCity
 */
MemberProfileUpdateRequest.prototype['addrCity'] = undefined;

/**
 * @member {String} addrState
 */
MemberProfileUpdateRequest.prototype['addrState'] = undefined;

/**
 * @member {String} addrZip
 */
MemberProfileUpdateRequest.prototype['addrZip'] = undefined;

/**
 * @member {module:model/MemberProfileCounty} addrCounty
 */
MemberProfileUpdateRequest.prototype['addrCounty'] = undefined;

/**
 * @member {String} phone
 */
MemberProfileUpdateRequest.prototype['phone'] = undefined;

/**
 * @member {String} emailAlt
 */
MemberProfileUpdateRequest.prototype['emailAlt'] = undefined;

/**
 * @member {Boolean} isListedDirectory
 */
MemberProfileUpdateRequest.prototype['isListedDirectory'] = undefined;

/**
 * @member {Boolean} isDesignationAmish
 */
MemberProfileUpdateRequest.prototype['isDesignationAmish'] = undefined;

/**
 * @member {String} proLicense
 */
MemberProfileUpdateRequest.prototype['proLicense'] = undefined;

/**
 * @member {String} companyName
 */
MemberProfileUpdateRequest.prototype['companyName'] = undefined;

/**
 * @member {Array.<module:model/MemberInterestsCommittee>} interestsCommittee
 */
MemberProfileUpdateRequest.prototype['interestsCommittee'] = undefined;

/**
 * @member {Array.<module:model/MemberInterestsIndividual>} interestsIndividual
 */
MemberProfileUpdateRequest.prototype['interestsIndividual'] = undefined;

/**
 * @member {String} interestsIndividualOther
 */
MemberProfileUpdateRequest.prototype['interestsIndividualOther'] = undefined;






export default MemberProfileUpdateRequest;

