/**
 * MyOhioAssembly.com Public API
 * REST API for MyOhioAssembly.com
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: contact@myohioassembly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResMemberDoc from './ResMemberDoc';

/**
 * The ResMembershipDocs model module.
 * @module model/ResMembershipDocs
 * @version 0.1.0
 */
class ResMembershipDocs {
    /**
     * Constructs a new <code>ResMembershipDocs</code>.
     * @alias module:model/ResMembershipDocs
     */
    constructor() { 
        
        ResMembershipDocs.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResMembershipDocs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResMembershipDocs} obj Optional instance to populate.
     * @return {module:model/ResMembershipDocs} The populated <code>ResMembershipDocs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResMembershipDocs();

            if (data.hasOwnProperty('declarationAmericans')) {
                obj['declarationAmericans'] = ResMemberDoc.constructFromObject(data['declarationAmericans']);
            }
            if (data.hasOwnProperty('declarationImmigrants')) {
                obj['declarationImmigrants'] = ResMemberDoc.constructFromObject(data['declarationImmigrants']);
            }
            if (data.hasOwnProperty('declarationFederalPersons')) {
                obj['declarationFederalPersons'] = ResMemberDoc.constructFromObject(data['declarationFederalPersons']);
            }
            if (data.hasOwnProperty('declarationPoliticalStatus')) {
                obj['declarationPoliticalStatus'] = ResMemberDoc.constructFromObject(data['declarationPoliticalStatus']);
            }
            if (data.hasOwnProperty('birthRecord')) {
                obj['birthRecord'] = ResMemberDoc.constructFromObject(data['birthRecord']);
            }
            if (data.hasOwnProperty('witnessTestimony1')) {
                obj['witnessTestimony1'] = ResMemberDoc.constructFromObject(data['witnessTestimony1']);
            }
            if (data.hasOwnProperty('witnessTestimony2')) {
                obj['witnessTestimony2'] = ResMemberDoc.constructFromObject(data['witnessTestimony2']);
            }
            if (data.hasOwnProperty('voterCancellation')) {
                obj['voterCancellation'] = ResMemberDoc.constructFromObject(data['voterCancellation']);
            }
            if (data.hasOwnProperty('revocationTaxes1')) {
                obj['revocationTaxes1'] = ResMemberDoc.constructFromObject(data['revocationTaxes1']);
            }
            if (data.hasOwnProperty('revocationTaxes2')) {
                obj['revocationTaxes2'] = ResMemberDoc.constructFromObject(data['revocationTaxes2']);
            }
            if (data.hasOwnProperty('deedReconveyance')) {
                obj['deedReconveyance'] = ResMemberDoc.constructFromObject(data['deedReconveyance']);
            }
            if (data.hasOwnProperty('certAssumedName')) {
                obj['certAssumedName'] = ResMemberDoc.constructFromObject(data['certAssumedName']);
            }
            if (data.hasOwnProperty('actExpatriation1')) {
                obj['actExpatriation1'] = ResMemberDoc.constructFromObject(data['actExpatriation1']);
            }
            if (data.hasOwnProperty('actExpatriation2')) {
                obj['actExpatriation2'] = ResMemberDoc.constructFromObject(data['actExpatriation2']);
            }
            if (data.hasOwnProperty('actExpatriation3')) {
                obj['actExpatriation3'] = ResMemberDoc.constructFromObject(data['actExpatriation3']);
            }
            if (data.hasOwnProperty('cancellationPowerAttorney')) {
                obj['cancellationPowerAttorney'] = ResMemberDoc.constructFromObject(data['cancellationPowerAttorney']);
            }
            if (data.hasOwnProperty('foreignSovereignImmunitiesAct')) {
                obj['foreignSovereignImmunitiesAct'] = ResMemberDoc.constructFromObject(data['foreignSovereignImmunitiesAct']);
            }
            if (data.hasOwnProperty('dnaParamountClaim')) {
                obj['dnaParamountClaim'] = ResMemberDoc.constructFromObject(data['dnaParamountClaim']);
            }
            if (data.hasOwnProperty('militarySeverance')) {
                obj['militarySeverance'] = ResMemberDoc.constructFromObject(data['militarySeverance']);
            }
            if (data.hasOwnProperty('commonCarryDeclaration')) {
                obj['commonCarryDeclaration'] = ResMemberDoc.constructFromObject(data['commonCarryDeclaration']);
            }
            if (data.hasOwnProperty('feeSchedule')) {
                obj['feeSchedule'] = ResMemberDoc.constructFromObject(data['feeSchedule']);
            }
            if (data.hasOwnProperty('lineageTreaty')) {
                obj['lineageTreaty'] = ResMemberDoc.constructFromObject(data['lineageTreaty']);
            }
            if (data.hasOwnProperty('marriageRecord')) {
                obj['marriageRecord'] = ResMemberDoc.constructFromObject(data['marriageRecord']);
            }
            if (data.hasOwnProperty('babyDeed1')) {
                obj['babyDeed1'] = ResMemberDoc.constructFromObject(data['babyDeed1']);
            }
            if (data.hasOwnProperty('babyDeed2')) {
                obj['babyDeed2'] = ResMemberDoc.constructFromObject(data['babyDeed2']);
            }
            if (data.hasOwnProperty('babyDeed3')) {
                obj['babyDeed3'] = ResMemberDoc.constructFromObject(data['babyDeed3']);
            }
            if (data.hasOwnProperty('babyDeed4')) {
                obj['babyDeed4'] = ResMemberDoc.constructFromObject(data['babyDeed4']);
            }
            if (data.hasOwnProperty('babyDeed5')) {
                obj['babyDeed5'] = ResMemberDoc.constructFromObject(data['babyDeed5']);
            }
            if (data.hasOwnProperty('babyDeed6')) {
                obj['babyDeed6'] = ResMemberDoc.constructFromObject(data['babyDeed6']);
            }
            if (data.hasOwnProperty('babyDeed7')) {
                obj['babyDeed7'] = ResMemberDoc.constructFromObject(data['babyDeed7']);
            }
            if (data.hasOwnProperty('babyDeed8')) {
                obj['babyDeed8'] = ResMemberDoc.constructFromObject(data['babyDeed8']);
            }
            if (data.hasOwnProperty('babyDeed9')) {
                obj['babyDeed9'] = ResMemberDoc.constructFromObject(data['babyDeed9']);
            }
            if (data.hasOwnProperty('deathRecord')) {
                obj['deathRecord'] = ResMemberDoc.constructFromObject(data['deathRecord']);
            }
            if (data.hasOwnProperty('privateBusinessDocs')) {
                obj['privateBusinessDocs'] = ApiClient.convertToType(data['privateBusinessDocs'], [ResMemberDoc]);
            }
            if (data.hasOwnProperty('otherDocs')) {
                obj['otherDocs'] = ApiClient.convertToType(data['otherDocs'], [ResMemberDoc]);
            }
            if (data.hasOwnProperty('miscNoticesDocs')) {
                obj['miscNoticesDocs'] = ApiClient.convertToType(data['miscNoticesDocs'], [ResMemberDoc]);
            }
            if (data.hasOwnProperty('landPatent1')) {
                obj['landPatent1'] = ResMemberDoc.constructFromObject(data['landPatent1']);
            }
            if (data.hasOwnProperty('landPatent2')) {
                obj['landPatent2'] = ResMemberDoc.constructFromObject(data['landPatent2']);
            }
            if (data.hasOwnProperty('landPatent3')) {
                obj['landPatent3'] = ResMemberDoc.constructFromObject(data['landPatent3']);
            }
            if (data.hasOwnProperty('landPatent4')) {
                obj['landPatent4'] = ResMemberDoc.constructFromObject(data['landPatent4']);
            }
            if (data.hasOwnProperty('landPatent5')) {
                obj['landPatent5'] = ResMemberDoc.constructFromObject(data['landPatent5']);
            }
            if (data.hasOwnProperty('territorialGovtDocs')) {
                obj['territorialGovtDocs'] = ApiClient.convertToType(data['territorialGovtDocs'], [ResMemberDoc]);
            }
            if (data.hasOwnProperty('municipalGovtDocs')) {
                obj['municipalGovtDocs'] = ApiClient.convertToType(data['municipalGovtDocs'], [ResMemberDoc]);
            }
            if (data.hasOwnProperty('commercialEntityDocs')) {
                obj['commercialEntityDocs'] = ApiClient.convertToType(data['commercialEntityDocs'], [ResMemberDoc]);
            }
            if (data.hasOwnProperty('commonLawWill')) {
                obj['commonLawWill'] = ResMemberDoc.constructFromObject(data['commonLawWill']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResMembershipDocs</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResMembershipDocs</code>.
     */
    static validateJSON(data) {
        // validate the optional field `declarationAmericans`
        if (data['declarationAmericans']) { // data not null
          ResMemberDoc.validateJSON(data['declarationAmericans']);
        }
        // validate the optional field `declarationImmigrants`
        if (data['declarationImmigrants']) { // data not null
          ResMemberDoc.validateJSON(data['declarationImmigrants']);
        }
        // validate the optional field `declarationFederalPersons`
        if (data['declarationFederalPersons']) { // data not null
          ResMemberDoc.validateJSON(data['declarationFederalPersons']);
        }
        // validate the optional field `declarationPoliticalStatus`
        if (data['declarationPoliticalStatus']) { // data not null
          ResMemberDoc.validateJSON(data['declarationPoliticalStatus']);
        }
        // validate the optional field `birthRecord`
        if (data['birthRecord']) { // data not null
          ResMemberDoc.validateJSON(data['birthRecord']);
        }
        // validate the optional field `witnessTestimony1`
        if (data['witnessTestimony1']) { // data not null
          ResMemberDoc.validateJSON(data['witnessTestimony1']);
        }
        // validate the optional field `witnessTestimony2`
        if (data['witnessTestimony2']) { // data not null
          ResMemberDoc.validateJSON(data['witnessTestimony2']);
        }
        // validate the optional field `voterCancellation`
        if (data['voterCancellation']) { // data not null
          ResMemberDoc.validateJSON(data['voterCancellation']);
        }
        // validate the optional field `revocationTaxes1`
        if (data['revocationTaxes1']) { // data not null
          ResMemberDoc.validateJSON(data['revocationTaxes1']);
        }
        // validate the optional field `revocationTaxes2`
        if (data['revocationTaxes2']) { // data not null
          ResMemberDoc.validateJSON(data['revocationTaxes2']);
        }
        // validate the optional field `deedReconveyance`
        if (data['deedReconveyance']) { // data not null
          ResMemberDoc.validateJSON(data['deedReconveyance']);
        }
        // validate the optional field `certAssumedName`
        if (data['certAssumedName']) { // data not null
          ResMemberDoc.validateJSON(data['certAssumedName']);
        }
        // validate the optional field `actExpatriation1`
        if (data['actExpatriation1']) { // data not null
          ResMemberDoc.validateJSON(data['actExpatriation1']);
        }
        // validate the optional field `actExpatriation2`
        if (data['actExpatriation2']) { // data not null
          ResMemberDoc.validateJSON(data['actExpatriation2']);
        }
        // validate the optional field `actExpatriation3`
        if (data['actExpatriation3']) { // data not null
          ResMemberDoc.validateJSON(data['actExpatriation3']);
        }
        // validate the optional field `cancellationPowerAttorney`
        if (data['cancellationPowerAttorney']) { // data not null
          ResMemberDoc.validateJSON(data['cancellationPowerAttorney']);
        }
        // validate the optional field `foreignSovereignImmunitiesAct`
        if (data['foreignSovereignImmunitiesAct']) { // data not null
          ResMemberDoc.validateJSON(data['foreignSovereignImmunitiesAct']);
        }
        // validate the optional field `dnaParamountClaim`
        if (data['dnaParamountClaim']) { // data not null
          ResMemberDoc.validateJSON(data['dnaParamountClaim']);
        }
        // validate the optional field `militarySeverance`
        if (data['militarySeverance']) { // data not null
          ResMemberDoc.validateJSON(data['militarySeverance']);
        }
        // validate the optional field `commonCarryDeclaration`
        if (data['commonCarryDeclaration']) { // data not null
          ResMemberDoc.validateJSON(data['commonCarryDeclaration']);
        }
        // validate the optional field `feeSchedule`
        if (data['feeSchedule']) { // data not null
          ResMemberDoc.validateJSON(data['feeSchedule']);
        }
        // validate the optional field `lineageTreaty`
        if (data['lineageTreaty']) { // data not null
          ResMemberDoc.validateJSON(data['lineageTreaty']);
        }
        // validate the optional field `marriageRecord`
        if (data['marriageRecord']) { // data not null
          ResMemberDoc.validateJSON(data['marriageRecord']);
        }
        // validate the optional field `babyDeed1`
        if (data['babyDeed1']) { // data not null
          ResMemberDoc.validateJSON(data['babyDeed1']);
        }
        // validate the optional field `babyDeed2`
        if (data['babyDeed2']) { // data not null
          ResMemberDoc.validateJSON(data['babyDeed2']);
        }
        // validate the optional field `babyDeed3`
        if (data['babyDeed3']) { // data not null
          ResMemberDoc.validateJSON(data['babyDeed3']);
        }
        // validate the optional field `babyDeed4`
        if (data['babyDeed4']) { // data not null
          ResMemberDoc.validateJSON(data['babyDeed4']);
        }
        // validate the optional field `babyDeed5`
        if (data['babyDeed5']) { // data not null
          ResMemberDoc.validateJSON(data['babyDeed5']);
        }
        // validate the optional field `babyDeed6`
        if (data['babyDeed6']) { // data not null
          ResMemberDoc.validateJSON(data['babyDeed6']);
        }
        // validate the optional field `babyDeed7`
        if (data['babyDeed7']) { // data not null
          ResMemberDoc.validateJSON(data['babyDeed7']);
        }
        // validate the optional field `babyDeed8`
        if (data['babyDeed8']) { // data not null
          ResMemberDoc.validateJSON(data['babyDeed8']);
        }
        // validate the optional field `babyDeed9`
        if (data['babyDeed9']) { // data not null
          ResMemberDoc.validateJSON(data['babyDeed9']);
        }
        // validate the optional field `deathRecord`
        if (data['deathRecord']) { // data not null
          ResMemberDoc.validateJSON(data['deathRecord']);
        }
        if (data['privateBusinessDocs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['privateBusinessDocs'])) {
                throw new Error("Expected the field `privateBusinessDocs` to be an array in the JSON data but got " + data['privateBusinessDocs']);
            }
            // validate the optional field `privateBusinessDocs` (array)
            for (const item of data['privateBusinessDocs']) {
                ResMemberDoc.validateJSON(item);
            };
        }
        if (data['otherDocs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['otherDocs'])) {
                throw new Error("Expected the field `otherDocs` to be an array in the JSON data but got " + data['otherDocs']);
            }
            // validate the optional field `otherDocs` (array)
            for (const item of data['otherDocs']) {
                ResMemberDoc.validateJSON(item);
            };
        }
        if (data['miscNoticesDocs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['miscNoticesDocs'])) {
                throw new Error("Expected the field `miscNoticesDocs` to be an array in the JSON data but got " + data['miscNoticesDocs']);
            }
            // validate the optional field `miscNoticesDocs` (array)
            for (const item of data['miscNoticesDocs']) {
                ResMemberDoc.validateJSON(item);
            };
        }
        // validate the optional field `landPatent1`
        if (data['landPatent1']) { // data not null
          ResMemberDoc.validateJSON(data['landPatent1']);
        }
        // validate the optional field `landPatent2`
        if (data['landPatent2']) { // data not null
          ResMemberDoc.validateJSON(data['landPatent2']);
        }
        // validate the optional field `landPatent3`
        if (data['landPatent3']) { // data not null
          ResMemberDoc.validateJSON(data['landPatent3']);
        }
        // validate the optional field `landPatent4`
        if (data['landPatent4']) { // data not null
          ResMemberDoc.validateJSON(data['landPatent4']);
        }
        // validate the optional field `landPatent5`
        if (data['landPatent5']) { // data not null
          ResMemberDoc.validateJSON(data['landPatent5']);
        }
        if (data['territorialGovtDocs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['territorialGovtDocs'])) {
                throw new Error("Expected the field `territorialGovtDocs` to be an array in the JSON data but got " + data['territorialGovtDocs']);
            }
            // validate the optional field `territorialGovtDocs` (array)
            for (const item of data['territorialGovtDocs']) {
                ResMemberDoc.validateJSON(item);
            };
        }
        if (data['municipalGovtDocs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['municipalGovtDocs'])) {
                throw new Error("Expected the field `municipalGovtDocs` to be an array in the JSON data but got " + data['municipalGovtDocs']);
            }
            // validate the optional field `municipalGovtDocs` (array)
            for (const item of data['municipalGovtDocs']) {
                ResMemberDoc.validateJSON(item);
            };
        }
        if (data['commercialEntityDocs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['commercialEntityDocs'])) {
                throw new Error("Expected the field `commercialEntityDocs` to be an array in the JSON data but got " + data['commercialEntityDocs']);
            }
            // validate the optional field `commercialEntityDocs` (array)
            for (const item of data['commercialEntityDocs']) {
                ResMemberDoc.validateJSON(item);
            };
        }
        // validate the optional field `commonLawWill`
        if (data['commonLawWill']) { // data not null
          ResMemberDoc.validateJSON(data['commonLawWill']);
        }

        return true;
    }


}



/**
 * @member {module:model/ResMemberDoc} declarationAmericans
 */
ResMembershipDocs.prototype['declarationAmericans'] = undefined;

/**
 * @member {module:model/ResMemberDoc} declarationImmigrants
 */
ResMembershipDocs.prototype['declarationImmigrants'] = undefined;

/**
 * @member {module:model/ResMemberDoc} declarationFederalPersons
 */
ResMembershipDocs.prototype['declarationFederalPersons'] = undefined;

/**
 * @member {module:model/ResMemberDoc} declarationPoliticalStatus
 */
ResMembershipDocs.prototype['declarationPoliticalStatus'] = undefined;

/**
 * @member {module:model/ResMemberDoc} birthRecord
 */
ResMembershipDocs.prototype['birthRecord'] = undefined;

/**
 * @member {module:model/ResMemberDoc} witnessTestimony1
 */
ResMembershipDocs.prototype['witnessTestimony1'] = undefined;

/**
 * @member {module:model/ResMemberDoc} witnessTestimony2
 */
ResMembershipDocs.prototype['witnessTestimony2'] = undefined;

/**
 * @member {module:model/ResMemberDoc} voterCancellation
 */
ResMembershipDocs.prototype['voterCancellation'] = undefined;

/**
 * @member {module:model/ResMemberDoc} revocationTaxes1
 */
ResMembershipDocs.prototype['revocationTaxes1'] = undefined;

/**
 * @member {module:model/ResMemberDoc} revocationTaxes2
 */
ResMembershipDocs.prototype['revocationTaxes2'] = undefined;

/**
 * @member {module:model/ResMemberDoc} deedReconveyance
 */
ResMembershipDocs.prototype['deedReconveyance'] = undefined;

/**
 * @member {module:model/ResMemberDoc} certAssumedName
 */
ResMembershipDocs.prototype['certAssumedName'] = undefined;

/**
 * @member {module:model/ResMemberDoc} actExpatriation1
 */
ResMembershipDocs.prototype['actExpatriation1'] = undefined;

/**
 * @member {module:model/ResMemberDoc} actExpatriation2
 */
ResMembershipDocs.prototype['actExpatriation2'] = undefined;

/**
 * @member {module:model/ResMemberDoc} actExpatriation3
 */
ResMembershipDocs.prototype['actExpatriation3'] = undefined;

/**
 * @member {module:model/ResMemberDoc} cancellationPowerAttorney
 */
ResMembershipDocs.prototype['cancellationPowerAttorney'] = undefined;

/**
 * @member {module:model/ResMemberDoc} foreignSovereignImmunitiesAct
 */
ResMembershipDocs.prototype['foreignSovereignImmunitiesAct'] = undefined;

/**
 * @member {module:model/ResMemberDoc} dnaParamountClaim
 */
ResMembershipDocs.prototype['dnaParamountClaim'] = undefined;

/**
 * @member {module:model/ResMemberDoc} militarySeverance
 */
ResMembershipDocs.prototype['militarySeverance'] = undefined;

/**
 * @member {module:model/ResMemberDoc} commonCarryDeclaration
 */
ResMembershipDocs.prototype['commonCarryDeclaration'] = undefined;

/**
 * @member {module:model/ResMemberDoc} feeSchedule
 */
ResMembershipDocs.prototype['feeSchedule'] = undefined;

/**
 * @member {module:model/ResMemberDoc} lineageTreaty
 */
ResMembershipDocs.prototype['lineageTreaty'] = undefined;

/**
 * @member {module:model/ResMemberDoc} marriageRecord
 */
ResMembershipDocs.prototype['marriageRecord'] = undefined;

/**
 * @member {module:model/ResMemberDoc} babyDeed1
 */
ResMembershipDocs.prototype['babyDeed1'] = undefined;

/**
 * @member {module:model/ResMemberDoc} babyDeed2
 */
ResMembershipDocs.prototype['babyDeed2'] = undefined;

/**
 * @member {module:model/ResMemberDoc} babyDeed3
 */
ResMembershipDocs.prototype['babyDeed3'] = undefined;

/**
 * @member {module:model/ResMemberDoc} babyDeed4
 */
ResMembershipDocs.prototype['babyDeed4'] = undefined;

/**
 * @member {module:model/ResMemberDoc} babyDeed5
 */
ResMembershipDocs.prototype['babyDeed5'] = undefined;

/**
 * @member {module:model/ResMemberDoc} babyDeed6
 */
ResMembershipDocs.prototype['babyDeed6'] = undefined;

/**
 * @member {module:model/ResMemberDoc} babyDeed7
 */
ResMembershipDocs.prototype['babyDeed7'] = undefined;

/**
 * @member {module:model/ResMemberDoc} babyDeed8
 */
ResMembershipDocs.prototype['babyDeed8'] = undefined;

/**
 * @member {module:model/ResMemberDoc} babyDeed9
 */
ResMembershipDocs.prototype['babyDeed9'] = undefined;

/**
 * @member {module:model/ResMemberDoc} deathRecord
 */
ResMembershipDocs.prototype['deathRecord'] = undefined;

/**
 * @member {Array.<module:model/ResMemberDoc>} privateBusinessDocs
 */
ResMembershipDocs.prototype['privateBusinessDocs'] = undefined;

/**
 * @member {Array.<module:model/ResMemberDoc>} otherDocs
 */
ResMembershipDocs.prototype['otherDocs'] = undefined;

/**
 * @member {Array.<module:model/ResMemberDoc>} miscNoticesDocs
 */
ResMembershipDocs.prototype['miscNoticesDocs'] = undefined;

/**
 * @member {module:model/ResMemberDoc} landPatent1
 */
ResMembershipDocs.prototype['landPatent1'] = undefined;

/**
 * @member {module:model/ResMemberDoc} landPatent2
 */
ResMembershipDocs.prototype['landPatent2'] = undefined;

/**
 * @member {module:model/ResMemberDoc} landPatent3
 */
ResMembershipDocs.prototype['landPatent3'] = undefined;

/**
 * @member {module:model/ResMemberDoc} landPatent4
 */
ResMembershipDocs.prototype['landPatent4'] = undefined;

/**
 * @member {module:model/ResMemberDoc} landPatent5
 */
ResMembershipDocs.prototype['landPatent5'] = undefined;

/**
 * @member {Array.<module:model/ResMemberDoc>} territorialGovtDocs
 */
ResMembershipDocs.prototype['territorialGovtDocs'] = undefined;

/**
 * @member {Array.<module:model/ResMemberDoc>} municipalGovtDocs
 */
ResMembershipDocs.prototype['municipalGovtDocs'] = undefined;

/**
 * @member {Array.<module:model/ResMemberDoc>} commercialEntityDocs
 */
ResMembershipDocs.prototype['commercialEntityDocs'] = undefined;

/**
 * @member {module:model/ResMemberDoc} commonLawWill
 */
ResMembershipDocs.prototype['commonLawWill'] = undefined;






export default ResMembershipDocs;

