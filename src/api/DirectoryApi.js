/**
 * MyOhioAssembly.com Public API
 * REST API for MyOhioAssembly.com
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: contact@myohioassembly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuthLoginCreate400Response from '../model/AuthLoginCreate400Response';
import DirectoryListingsList200Response from '../model/DirectoryListingsList200Response';

/**
* Directory service.
* @module api/DirectoryApi
* @version 0.1.0
*/
export default class DirectoryApi {

    /**
    * Constructs a new DirectoryApi. 
    * @alias module:api/DirectoryApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the directoryListingsList operation.
     * @callback module:api/DirectoryApi~directoryListingsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DirectoryListingsList200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get directory listings based on filter
     * Retrieve directory listings.  This operation is public.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [filterRole] only return members with minimum auth role specified
     * @param {module:api/DirectoryApi~directoryListingsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DirectoryListingsList200Response}
     */
    directoryListingsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filterRole': opts['filterRole']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DirectoryListingsList200Response;
      return this.apiClient.callApi(
        '/directoryListings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
